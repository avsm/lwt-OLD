===== 2.0.0+dev =====

  * Adding a syntax extension for mesage logging
  * Adding function {{{Lwt_util.daemonize}}}
  * Enhancement in {{{Lwt_process}}}
  * Adding {{{Lwt_unix.wait4}}}
  * Bugfix in Lwt_unix.connect: it returned immediatly on EINPROGRESS
  * Bugfixes in lwt.glib

===== 2.0.0 =====

  * Adding modules:
    ** {{{Lwt_stream}}}: lwt-aware version of the {{{Stream}}} module
    ** {{{Lwt_gc}}} for using {{{finalise}}} without
       {{{Lwt_unix.run}}}
    ** {{{Lwt_io}}}: a new implementation of buffered channels with
       more features and better handling of concurrent access
    ** {{{Lwt_text}}}: implementation of text channels
    ** {{{Lwt_process}}}: helpers to spawn processes and communicate
       with them
    ** {{{Lwt_main}}} for abstracting the main loop and allowing
       replacement by a custom main loop
    ** {{{Lwt_glib}}} for integration into the glib main event loop
    ** {{{Lwt_term}}} for interaction with the terminal
    ** {{{Lwt_read_line}}} for interactive user input
    ** {{{Lwt_monitor}}}, {{{Lwt_mvar}}}: combined locks for
       synchronization with conditional variables for notification
    ** {{{Lwt_throttle}}} for limiting rate of execution
       (e.g. for authentication procedure)
    ** {{{Lwt_sequence}}}: mutable sequence of elements
    ** {{{Lwt_event}}}, {{{Lwt_signal}}}: helpers for reactive
       programming with lwt
  * Adding a syntax extension {{{pa_lwt}}}:
    ** handles anonymous bind {{{a >> b}}}
    ** adds syntactic sugar for catching errors (ticket #6)
    ** adds syntactic sugar for parallel let-binding construction
    ** adds syntactic sugar for for-like loops
  * Top-level integration:
    ** threads can runs while reading user input
    ** line editing support
  * New enhanced OCaml toplevel with some basic completion features
  * Adding C stubs to reimplement {{{Unix.read}}} and {{{Unix.write}}}
    with assumption of non-blocking behaviour
  * Adding more functions/helpers in {{{Lwt}}}
  * Fixing memory leaks in {{{Lwt.choose}}}
  * Bugfix in {{{Lwt_chan.close_*}}} (ticket #66)
  * Separate the type of threads (covariant) from the type of thread
    wakeners (contravariant); the type of many functions related to
    {{{Lwt.wait}}} has been changed
  * Add cancelable threads
  * Unix-dependent part is now put in its own archive and findlib
    package.

===== 1.1.0 =====

  * Adding module {{{Lwt_pool}}} for creating pools (for example pools
    of connections)
  * Adding a few functions in {{{Lwt_chan}}}
  * Fixing bugs in {{{Lwt_util.map_serial}}} and
    {{{Lwt_util.iter_serial}}}
  * Putting {{{Lwt_preemptive}}}, {{{Lwt_lib}}} and {{{Lwt_ssl}}} in
    separate libraries and findlib subpackages so that lwt.cma depends
    only on unix.cma.

===== 1.0.0 (and before) =====

  * See Ocsigen changelog
